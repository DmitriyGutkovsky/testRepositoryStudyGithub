-- Homework SQL

-- TASK 1: Вывести все уникальные имена ролей пользователей.
select distinct role_name
from m_roles;


-- TASK 2: Подсчитать число машин у каждого пользователя.
-- Вывести в формате
-- User full name (username + пробел + user surname) | Число машин у пользователя.

-- 1-ый вариант вывода: результат таблицей
select username, surname, count(m_cars.id)
from m_users
         join m_cars
              on m_users.id = m_cars.user_id
GROUP BY m_users.id
order by m_users.id;

-- 2-ой вариант вывода: вывод одной колонкой (параметры перечислены в строку через ', '): User1, Surname1, 1
select username || ', ' || surname || ', ' || count(m_cars.id)
from m_users
         join m_cars
              on m_users.id = m_cars.user_id
GROUP BY m_users.id
order by m_users.id;

-- 3-ий вариант вывода: двумя столбаци: первый столбец "User1, Surname1", второй - число машин у пользователя
select username || ', ' || surname, count(m_cars.id)
from m_users
         join m_cars
              on m_users.id = m_cars.user_id
GROUP BY m_users.id
order by m_users.id;


-- TASK 3: Подсчитать для каждого диллера число машин, старше 2018 года производства с красным кузовом.
-- в таблицу m_cars добавил колонки: creation_year (год выпуска) и country_of_origin (страна происхождения)

select d.name as dealer_name, count(mc.id)
from m_auto_dealer as d join m_cars mc on d.id = mc.dealer_id
join m_body mb on mc.id = mb.car_id
where mc.creation_year < 2018 and mb.color = 'red'
group by d.name;


-- TASK 4: Найти пользователей не из Беларуси и России,
--          у которых есть машина 2010-2015 года выпуска из Германии и купленную в диллере не в Германии
--          с объемом двигателя больше 3 литра.

select username
from m_users  join m_cars mc on m_users.id = mc.user_id
join m_auto_dealer mad on mad.id = mc.dealer_id
join m_engine me on mc.id = me.car_id
where m_users.country <> 'Russia' and m_users.country <> 'Belarus'
        and (mc.creation_year between '2010' and '2015')
        and mc.country_of_origin = 'Germany'
        and mad.country <> 'Germany'
        and me.volume >3;


-- TASK 5: Определить логины пользователей, имеющих больше 3 машин.

select distinct login
from m_users u join m_cars c on u.id = c.user_id
group by login
having count(c.id) > 3;

-- added column with Qty m_cars (just in case)
select distinct login, count(c.id) as Qty_cars
from m_users u join m_cars c on u.id = c.user_id
group by login
having count(c.id) > 3;


-- TASK 6: Вывести уникальных диллеров с подсчитанной суммой стоимостей машин, связанных с ними.

select distinct name, sum(c.price) as total_cars_price
from m_auto_dealer dealer join m_cars c on dealer.id = c.dealer_id
group by name
order by name;


-- TASK 7: Подсчитать количество уникальных пользователей, владеющих хотя бы одной машиной,
--         стоимость которой превышает среднюю стоимость всех машин.

select count(distinct u.id)
from m_users u join m_cars c on u.id = c.user_id
where price > (select avg(price) from m_cars);